plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

allprojects {
    repositories {
        maven { url 'https://lss233.littleservice.cn/repositories/minecraft' }
        maven {
            name = 'Aliyun Mirror'
            url  = 'https://maven.aliyun.com/repository/public'
        }
        maven {
            name = 'COVID-Trump'
            url = 'https://covid-trump.github.io/mvn/'
        }
        maven {
            name = "TerraformersMC"
            url  = 'https://maven.terraformersmc.com/releases/'
        }
    }
}

subprojects {
    //if (project == rootProject.project(":forge117")) return
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        if (project != rootProject.project(':forge117')) {
            minecraft "com.mojang:minecraft:1.16.5"
        }
        mappings loom.officialMojangMappings()
        modApi "xland.mcmod:enchlevel-langpatch:1.2.0:api"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
        // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
        // We'll use that if it's available, but otherwise we'll use the older option.
        if (project != rootProject.project(':forge117')) {
            def targetVersion = 8
            if (JavaVersion.current().isJava9Compatible()) {
                options.release.set(targetVersion)
            }
        }
    }

    java {
        withSourcesJar()
    }
}
